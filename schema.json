openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/admin/login_via_token/:
    post:
      operationId: api_admin_login_via_token_create
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/apply/:
    post:
      operationId: api_apply_create
      description: Handles the submission of shop applications with vulnerable XML
        parsing (XXE).
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/approve/{shop_id}/:
    post:
      operationId: api_approve_create
      description: Handles shop approval by admins.
      parameters:
      - in: path
        name: shop_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/cart/:
    get:
      operationId: api_cart_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/cart/add/:
    post:
      operationId: api_cart_add_create
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/cart/remove/:
    post:
      operationId: api_cart_remove_create
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/cart/update_quantity/:
    post:
      operationId: api_cart_update_quantity_create
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/categories/:
    get:
      operationId: api_categories_list
      description: Handles categories creation and retrieval.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_categories_create
      description: Handles categories creation and retrieval.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: api_categories_retrieve
      description: Handles categories creation and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_categories_update
      description: Handles categories creation and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_categories_partial_update
      description: Handles categories creation and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_categories_destroy
      description: Handles categories creation and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/favorites/:
    get:
      operationId: api_favorites_list
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favorite'
          description: ''
    post:
      operationId: api_favorites_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Favorite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Favorite'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
          description: ''
  /api/favorites/{id}/:
    get:
      operationId: api_favorites_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
          description: ''
    put:
      operationId: api_favorites_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Favorite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Favorite'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
          description: ''
    patch:
      operationId: api_favorites_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFavorite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFavorite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFavorite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
          description: ''
    delete:
      operationId: api_favorites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/favorites/toggle/:
    post:
      operationId: api_favorites_toggle_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Favorite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Favorite'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      description: Handles user authentication and token retrieval.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/logout/:
    post:
      operationId: api_logout_create
      description: Logout user by deleting the token.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/:
    get:
      operationId: api_orders_list
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /api/orders/{order_id}/confirm_shipping/:
    post:
      operationId: api_orders_confirm_shipping_create
      description: |-
        Accepts a raw XML body with potential XXE.
        Example structure:
        <ShipmentConfirmation>
            <OrderID>12345</OrderID>
            <Carrier>PostNL</Carrier>
            <TrackingNumber>NL123456789</TrackingNumber>
            <ShippedAt>2024-03-28T14:00:00Z</ShippedAt>
        </ShipmentConfirmation>
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/{order_id}/shipping_confirmation/:
    delete:
      operationId: api_orders_shipping_confirmation_destroy
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/{id}/update_status/:
    post:
      operationId: api_orders_update_status_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/my_orders/:
    get:
      operationId: api_orders_my_orders_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/my_shop_orders/:
    get:
      operationId: api_orders_my_shop_orders_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/products/live_search/:
    get:
      operationId: api_products_live_search_retrieve
      description: |-
        Allows approved suppliers to manage their products.
        Customers can view all available products.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/my_shop/:
    get:
      operationId: api_products_my_shop_retrieve
      description: 'Alternative way: Explicit /products/my_shop/ endpoint'
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      description: Handles user registration and automatic login upon success.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/reject/{shop_id}/:
    post:
      operationId: api_reject_create
      description: Handles shop rejection by admins.
      parameters:
      - in: path
        name: shop_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/shop/delete_picture/:
    delete:
      operationId: api_shop_delete_picture_destroy
      description: Deletes the shop's profile picture.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/shop/update/:
    put:
      operationId: api_shop_update_update
      description: Allows shop owners to update their shop details.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/shop/upload_picture/:
    post:
      operationId: api_shop_upload_picture_create
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/shops/{shop_id}/:
    get:
      operationId: api_shops_retrieve
      parameters:
      - in: path
        name: shop_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/shops/{shop_id}/reviews/:
    get:
      operationId: api_shops_reviews_retrieve
      description: Retrieve all reviews for a specific shop. If the user has a review,
        return it first.
      parameters:
      - in: path
        name: shop_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_shops_reviews_create
      description: Create or update a review for a shop.
      parameters:
      - in: path
        name: shop_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_shops_reviews_destroy
      description: Delete the user's review for the shop.
      parameters:
      - in: path
        name: shop_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/shops/my-shop/:
    get:
      operationId: api_shops_my_shop_retrieve
      description: Retrieve the shop that belongs to the currently logged-in user.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      description: Handles user registration and retrieval.
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_users_create
      description: Handles user registration and retrieval.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: Handles user registration and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      description: Handles user registration and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      description: Handles user registration and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      description: Handles user registration and retrieval.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/{username}/generate_report/:
    get:
      operationId: api_users_generate_report_retrieve
      description: |-
        Generate activity report for given user.

        The report is stored in `/tmp/reports/{username}_report.json`
        for auditing and offline review purposes.

        This includes last login time, token presence, and session info.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/change_password/:
    post:
      operationId: api_users_change_password_create
      description: Handles user registration and retrieval.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
      required:
      - id
      - image
      - name
    Favorite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        product_name:
          type: string
          readOnly: true
        product_image:
          type: string
          format: uri
          readOnly: true
        product_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        product_discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - id
      - product
      - product_discount
      - product_image
      - product_name
      - product_price
    Login:
      type: object
      description: Handles user authentication and validation.
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        shipping_confirmation:
          type: string
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/StatusEnum'
        full_name:
          type: string
          maxLength: 100
        shipping_address:
          type: string
          maxLength: 255
        shipping_city:
          type: string
          maxLength: 100
        shipping_postal_code:
          type: string
          maxLength: 20
        shipping_country:
          type: string
          maxLength: 50
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        payment_method:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - full_name
      - id
      - items
      - payment_method
      - shipping_address
      - shipping_city
      - shipping_confirmation
      - shipping_country
      - shipping_postal_code
      - total_price
      - user
    OrderCreate:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SimpleOrderItem'
        shipping_address:
          type: string
        shipping_city:
          type: string
        shipping_country:
          type: string
        shipping_postal_code:
          type: string
        full_name:
          type: string
        phone_number:
          type: string
        payment_method:
          type: string
      required:
      - full_name
      - items
      - payment_method
      - shipping_address
      - shipping_city
      - shipping_country
      - shipping_postal_code
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        product_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - price
      - product
      - product_name
      - quantity
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
    PatchedFavorite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        product_name:
          type: string
          readOnly: true
        product_image:
          type: string
          format: uri
          readOnly: true
        product_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        product_discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          readOnly: true
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        shipping_confirmation:
          type: string
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/StatusEnum'
        full_name:
          type: string
          maxLength: 100
        shipping_address:
          type: string
          maxLength: 255
        shipping_city:
          type: string
          maxLength: 100
        shipping_postal_code:
          type: string
          maxLength: 20
        shipping_country:
          type: string
          maxLength: 50
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        payment_method:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
        shop_products:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        shop:
          type: integer
          nullable: true
        category:
          type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
        shop_products:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        shop:
          type: integer
          nullable: true
        category:
          type: integer
      required:
      - category
      - category_name
      - created_at
      - description
      - id
      - name
      - price
      - shop_products
      - stock
    SimpleOrderItem:
      type: object
      properties:
        product:
          type: integer
        quantity:
          type: integer
          minimum: 1
      required:
      - product
      - quantity
    StatusEnum:
      enum:
      - pending
      - shipped
      - delivered
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `shipped` - Shipped
        * `delivered` - Delivered
        * `cancelled` - Cancelled
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
